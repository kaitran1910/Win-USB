#!/usr/bin/env bash

# Function to check if the Windows ISO file exists
check_file() {
    local file_path=$1
    if [[ ! -f $file_path ]]; then
        echo -e "The file $WIN_FILE does not exist at $file_path\r\n"
        return 1
    fi
    return 0
}

# Function to validate the disk number entered by the user
validate_disk() {
    while : ; do
        read -p "ENTER THE DESIRED USB DISK: " diskNum
        if [[ -z "$diskNum" || ! "$diskNum" =~ ^[0-9]+$ ]]; then
            echo -e "Invalid input. Please enter the disk number.\r\n"
        else
            break
        fi
    done
}

# Function to erase the specified disk
erase_disk() {
    local diskNum=$1
    echo -e "\r\n\t***   ERASING THE SELECTED DISK   ***\r\n"
    diskutil eraseDisk exFAT "WIN10" GPT /dev/disk${diskNum}
    echo -e "\r\n"
}

# Function to mount the Windows ISO file
mount_iso() {
    local iso_path=$1
    echo -e "\r\n\t***   MOUNTING THE ISO FILE   ***\r\n"
    hdiutil attach $iso_path
    echo -e "\r\n"
}

# Function to copy the contents of the mounted ISO file to the selected disk
copy_contents() {
    sudo rsync -av --progress /Volumes/CCCOMA_X64FRE_EN-US_DV9/ /Volumes/WIN10/
}

# Initial file check
WIN_FILE="Win10_22H2_English_x64.iso"
DEFAULT_PATH=~/Downloads/$WIN_FILE
check_file $DEFAULT_PATH

# Prompt user for file path if not found
if [[ $? -ne 0 ]]; then
    read -p "Please provide the full path to $WIN_FILE: " user_path
    check_file $user_path
    if [[ $? -ne 0 ]]; then
        echo -e "Exiting the script!\r\n"
        exit 1
    fi
    WIN_PATH=$user_path
else
    WIN_PATH=$DEFAULT_PATH
fi

# Disk selection and validation
echo -e "\r\n\t***   LISTING ALL THE DISKS   ***\r\n"
diskutil list
echo -e "\r\nEXTRA CAREFUL! THIS WILL ERASE THE SELECTED DISK!"
validate_disk

# Disk size check
diskSize=$(diskutil info /dev/disk${diskNum} | grep "Disk Size" | awk '{print $5}' | sed 's/(//g')
diskSizeGB=$(echo "scale=2; $diskSize/1000000000" | bc)
diskSizeGB_int=${diskSizeGB%.*}
echo -e "SELECTED: /dev/disk${diskNum} \t SIZE ${diskSizeGB}GB\r\n"
if (( diskSizeGB_int > 256 )); then
    echo -e "The selected disk size is more than 256GB!\r\n"
    read -p "Are you sure you want to continue? (y/n) : " confirm
    while [[ -z "$confirm" || ! "$confirm" =~ ^(y|n)$ ]]; do
        echo -e "Please enter y or n!\r\n"
        echo -e "The selected disk size is more than 256GB!\r\n"
        read -p "Are you sure you want to continue? (y/n) : " confirm
    done
    if [[ $confirm == "n" ]]; then
        echo -e "Exiting the script!\r\n"
        exit 0
    fi
fi

# Erase disk, mount ISO, and copy contents
erase_disk $diskNum
mount_iso $WIN_PATH
copy_contents

# Unmount the iso file and exit
echo -e "\r\n\t***   UNMOUNTING THE ISO FILE   ***\r\n"
hdiutil unmount /Volumes/CCCOMA_X64FRE_EN-US_DV9
echo -e "Process completed successfully!\r\n"
exit 0
